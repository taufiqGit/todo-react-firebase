{"version":3,"sources":["utils/firebase.js","components/item.js","components/listAll.js","components/formInput.js","components/SlideBtn.js","App4.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Item","data","handleChange","deleteItem","displayBtnDel","type","checked","complete","onChange","className","title","onClick","ListAll","slide","console","log","res","database","ref","child","id","update","remove","map","active","filter","length","dataDel","deleteAll","TextInput","params","useState","text","setText","value","e","target","placeholder","dataRef","dataPost","push","SlideBtn","setSlide","Todo","setData","useEffect","on","snapshot","resData","val","ListData","reverse","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5fa94c4.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n\r\n  export default firebase","import React from 'react'\r\n\r\nexport default function Item({data, handleChange, deleteItem, displayBtnDel}) {\r\n\r\n    return(\r\n        <li>\r\n            <label>\r\n                <input type=\"checkbox\" checked={data.complete} onChange={handleChange}/>\r\n                <span className=\"checkmark\"></span>\r\n                <p className={data.complete ? \"text-checked\" : \"\"}>{data.title}</p>\r\n            </label>\r\n            <button className={displayBtnDel ? 'button-del' : 'button-del-none'} onClick={()=> deleteItem(data)}>\r\n                X\r\n            </button>\r\n        </li> \r\n    )\r\n}","import React from 'react'\r\nimport firebase from '../utils/firebase'\r\nimport Item from './item'\r\n\r\nexport default function ListAll({data, slide}) {\r\nconsole.log(data)\r\n    const handleChange =(res)=>{\r\n        const dataDetail = firebase.database().ref(\"Todo\").child(res.id)\r\n        dataDetail.update({\r\n            complete: !res.complete\r\n        })\r\n    }\r\n\r\n    const deleteItem =(res)=>{\r\n        const detailDelete = firebase.database().ref(\"Todo\").child(res.id)\r\n        detailDelete.remove()\r\n    }\r\n\r\n    const deleteAll =(res)=>{\r\n        for (let dataDel of res){\r\n           const allComplete = firebase.database().ref(\"Todo\").child(dataDel.id)\r\n           allComplete.remove()\r\n        }   \r\n    }\r\n\r\n    if (slide === \"all\") {\r\n       return(\r\n           <>\r\n               {\r\n                 data.map(res => (\r\n                    <Item key={res.id} data={res} handleChange={()=> handleChange(res)} displayBtnDel={false}/>\r\n                 ))  \r\n               }\r\n           </>\r\n       ) \r\n    } else if(slide === \"active\"){\r\n        let active = data.filter(res => {return res.complete === false})\r\n        return (\r\n            <>\r\n             {\r\n                active.map(res => (\r\n                    <Item key={res.id} data={res} handleChange={()=> handleChange(res)} displayBtnDel={false}/>\r\n                ))  \r\n             }\r\n            </>            \r\n        )\r\n    } else if(slide === \"complete\"){\r\n        let complete = data.filter(res => {return res.complete === true})\r\n        return (\r\n            <>\r\n             {\r\n                complete.map(res => (\r\n                    <Item key={res.id} data={res} handleChange={()=> handleChange(res)} deleteItem={deleteItem} displayBtnDel={true}/>\r\n                ))  \r\n             }\r\n             {\r\n                 complete.length !== 0 ? (\r\n                     <li><button className=\"btn-del-all\" onClick={()=> deleteAll(complete)}>delete all</button></li>\r\n                 ) : \"\"\r\n             }\r\n             \r\n            </>            \r\n        )\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport firebase from '../utils/firebase'\r\n\r\nexport default function TextInput(params) {\r\n    const [text, setText] = useState(\"\")\r\n    \r\n    const handleChange = ev =>{\r\n        setText(ev.target.value)\r\n    }\r\n\r\n    const postData =()=>{\r\n        if (text !== \"\") {\r\n            const dataRef = firebase.database().ref(\"Todo\")\r\n            const dataPost = {\r\n                title: text,\r\n                complete: false\r\n            }\r\n            dataRef.push(dataPost)\r\n            setText(\"\")\r\n        }\r\n    }\r\n    console.log(text)\r\n    return(\r\n        <div className=\"input-item\">\r\n            <input type=\"text\" value={text} onChange={(e)=> handleChange(e)} placeholder=\"add details\"/>\r\n            <button onClick={postData}>Add</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function SlideBtn({slide, setSlide}) {\r\n    return(\r\n        <div className=\"slide-btn\">\r\n            <button onClick={()=> setSlide(\"all\")} className={slide === \"all\" ? 'slide-btn-active':''}>All</button>\r\n            <button onClick={()=> setSlide(\"active\")} className={slide === \"active\" ? 'slide-btn-active':''}>Active</button>\r\n            <button onClick={()=> setSlide(\"complete\")} className={slide === \"complete\" ? 'slide-btn-active':''}>Completed</button>\r\n        </div>        \r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport './App.scss';\r\nimport firebase from './utils/firebase'\r\nimport ListAll from './components/listAll';\r\nimport TextInput from './components/formInput';\r\nimport SlideBtn from './components/SlideBtn';\r\n\r\nexport default function Todo() {\r\n   const [data, setData] = useState()\r\n   const [slide, setSlide] = useState(\"all\")\r\n\r\n   useEffect(()=>{\r\n    const getdata = firebase.database().ref(\"Todo\")\r\n    getdata.on(\"value\", (snapshot)=>{\r\n    const resData = snapshot.val()\r\n    const ListData = []\r\n    for (let id in resData) {\r\n        ListData.push({id, ...resData[id]})\r\n        } \r\n    ListData.reverse()  \r\n    setData(ListData)\r\n    })\r\n   }, [])\r\n\r\n\r\n    return(\r\n        <main className=\"App\">\r\n            <div className=\"todo\">\r\n                <h1>#todo</h1>\r\n                <SlideBtn slide={slide} setSlide={setSlide}/>\r\n                <TextInput/>\r\n                {\r\n                    data === undefined ? (<p>loading...</p>) : (\r\n                        <div className=\"list-items\">\r\n                            <ul>\r\n                               <ListAll data={data} slide={slide}/>\r\n                            </ul>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todo from './App4';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Todo />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}